{
  "timeline_index": 204,
  "planner": {
    "Team Leader": {
      "1": {
        "task_id": "1",
        "dependent_task_ids": [],
        "instruction": "[ETL 재실행 with NEW SERVICE SECRET + PERM_CHECK]\n- 목적: 사용자가 제공한 신규 service secret 키로 ETL 업서트를 재시도하고, anon 키로 PERM_CHECK(프론트 관점 권한 상태)를 재검증합니다.\n- 프로젝트 루트: /workspace/jeju-travel-planner\n- 입력 파일: /workspace/uploads/jeju.txt\n- Supabase 설정:\n  · URL: https://gfhtoiqsvrqbwzshjxgs.supabase.co\n  · ANON(프론트/진단 전용): eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdmaHRvaXFzdnJxYnd6c2hqeGdzIiwicm9zZSI6ImFub24iLCJpYXQiOjE3NTc5MjYxNTIsImV4cCI6MjA3MzUwMjE1Mn0.5b9peKSBr9MQcODRfppwZriSomGEdhs6kvD6BLCVL04\n  · SERVICE_SECRET(ETL 전용, 로그/문서에 노출 금지): sb_secret_JJqba7_7fsm9gEOxDhol4Q_G9SU0gMR\n  · (백업) 기존 service_role JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdmaHRvaXFzdnJxYnd6c2hqeGdzIiwicm9zZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzkyNjE1MiwiZXhwIjoyMDczNTAyMTUyfQ.JvW0BNk1YWxtW3F7egAOKqnzta67s9ML-ocHq8otSOE\n\n실행/보고 규칙\n- ETL 업서트는 service 자격(SUPABASE_SERVICE_ROLE 또는 제공된 service secret)으로 수행\n- PERM_CHECK는 anon 자격으로 수행\n- insert-only(중복 무시) 모드로 실행: onConflict/do nothing 또는 스크립트 플래그 사용\n- 모든 키는 로그에 마스킹하여 기록(앞 4자리+...+끝 6자리)\n- 산출물 경로:\n  · /workspace/jeju-travel-planner/supabase/seed/from_jeju_txt.json\n  · /workspace/jeju-travel-planner/logs/etl_validation.log\n  · /workspace/jeju-travel-planner/scripts/etl_from_jeju_txt.mjs (필요 시 보강)\n\n절차\n1) 스크립트 점검\n- etl_from_jeju_txt.mjs가 아래 환경 변수를 받아 두 클라이언트를 생성하는지 확인/보강:\n  const url = process.env.NEXT_PUBLIC_SUPABASE_URL;\n  const anon = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n  const svc = process.env.SUPABASE_SERVICE_ROLE || process.env.SUPABASE_SERVICE_SECRET;\n  // 업서트용\n  const supabaseSvc = createClient(url, svc, { auth: { autoRefreshToken:false, persistSession:false } });\n  // 권한 진단용\n  const supabaseAnon = createClient(url, anon, { auth: { autoRefreshToken:false, persistSession:false } });\n- ETL 업서트 순서: categories → places → schedules → schedule_places\n- insert-only 모드 지원(플래그 또는 on conflict do nothing)\n\n2) 실행(신규 service secret 우선, 실패 시 백업 JWT 자동 재시도)\n- 셸 명령:\n  cd /workspace/jeju-travel-planner && \\\n  SUPABASE_SERVICE_SECRET=sb_secret_JJqba7_7fsm9gEOxDhol4Q_G9SU0gMR \\\n  NEXT_PUBLIC_SUPABASE_URL=https://gfhtoiqsvrqbwzshjxgs.supabase.co \\\n  NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdmaHRvaXFzdnJxYnd6c2hqeGdzIiwicm9zZSI6ImFub24iLCJpYXQiOjE3NTc5MjYxNTIsImV4cCI6MjA3MzUwMjE1Mn0.5b9peKSBr9MQcODRfppwZriSomGEdhs6kvD6BLCVL04 \\\n  ETL_INSERT_ONLY=true \\\n  node ./scripts/etl_from_jeju_txt.mjs\n- 만약 service secret로 401/403이면 자동으로 SUPABASE_SERVICE_ROLE에 백업 JWT를 주입해 재시도:\n  cd /workspace/jeju-travel-planner && \\\n  SUPABASE_SERVICE_ROLE=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdmaHRvaXFzdnJxYnd6c2hqeGdzIiwicm9zZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzkyNjE1MiwiZXhwIjoyMDczNTAyMTUyfQ.JvW0BNk1YWxtW3F7egAOKqnzta67s9ML-ocHq8otSOE \\\n  NEXT_PUBLIC_SUPABASE_URL=https://gfhtoiqsvrqbwzshjxgs.supabase.co \\\n  NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdmaHRvaXFzdnJxYnd6c2hqeGdzIiwicm9zZSI6ImFub24iLCJpYXQiOjE3NTc5MjYxNTIsImV4cCI6MjA3MzUwMjE1Mn0.5b9peKSBr9MQcODRfppwZriSomGEdhs6kvD6BLCVL04 \\\n  ETL_INSERT_ONLY=true \\\n  node ./scripts/etl_from_jeju_txt.mjs\n\n3) PERM_CHECK(anon)\n- 각 테이블(places, categories, schedules, schedule_places)에 대해:\n  · select 1건 시도 → status/error 기록\n  · places insert 더미 1건 시도 → 성공 시 즉시 delete 롤백\n- etl_validation.log 기록 예:\n  [INFO] step=PERM_CHECK table=places op=select status=200\n  [ERROR] step=PERM_CHECK table=places op=insert status=403 error={\"code\":\"PGRST205\",\"message\":\"...\",\"details\":\"...\",\"hint\":\"...\"}\n\n4) 보고(이 스레드 회신)\n- 테이블별 업서트 요약(삽입/중복무시/갱신 수 또는 최종 count)\n- PERM_CHECK 결과 요약(테이블×select/insert)\n- etl_validation.log 마지막 50줄\n- 특이사항 및 후속 조치(예: categories UPDATE 정책 적용 결과/추가 제안)\n\n보안 주의\n- .env.local에는 anon만 기록, service secret/JWT는 셸 환경변수로만 주입\n- 로그/보고서에 키 원문 절대 노출 금지(마스킹) ",
        "task_type": "ETL Rerun & Permission Check (New Service Secret)",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": false,
        "assignee": "David",
        "start_at": 1757923849.9284465
      },
      "current_task_id": "1",
      "2": {
        "task_id": "2",
        "dependent_task_ids": [
          "1"
        ],
        "instruction": "[프론트 보안/UX 점검: 서비스 키 비노출 보장 + 403 UX 유지]\n- 목적: 서비스 롤 키는 ETL 전용으로만 사용하고, 프론트(브라우저)에서는 anon 키만 사용하도록 강제. 403 시 사용자 안내/로깅 유지.\n- 프로젝트 루트: /workspace/jeju-travel-planner\n- 파일:\n  - /workspace/jeju-travel-planner/lib/supabaseClient.ts\n  - /workspace/jeju-travel-planner/components/JejuTravelPlanner.tsx\n  - /workspace/jeju-travel-planner/README.md\n\n작업:\n1) 보안 가드\n   - lib/supabaseClient.ts에서 createClient는 반드시 process.env.NEXT_PUBLIC_SUPABASE_*만 사용\n   - NEXT_PUBLIC_SUPABASE_ANON_KEY에 “service_role” 문자열이 포함되면 콘솔 에러 출력 후, 모든 네트워크 호출을 중단하고 UI에 경고 배너 표시\n   - 서비스 키를 브라우저로 노출하지 않도록 README에 “서비스 키는 오직 ETL 셸 환경변수(SUPABASE_SERVICE_ROLE)로만 사용” 명시\n\n2) UX/로깅 유지\n   - 403/401/409/23503 케이스별 배너/토스트 유지\n   - 헬스체크(categories.select('key').limit(1)) 결과를 콘솔에 요약 출력\n   - 빌드/런 확인: npm run dev, npm run build\n\n출력:\n- 변경 파일 목록과 핵심 변경점 요약\n- 빌드/런 결과와 콘솔 로그 요약(스크린샷 대체 텍스트)",
        "task_type": "Frontend Security & UX Hardening",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": false,
        "assignee": "Alex"
      }
    },
    "Data Analyst": {
      "1": {
        "task_id": "1",
        "dependent_task_ids": [],
        "instruction": "Integrate Supabase into the frontend: add @supabase/supabase-js to package.json, create lib/supabaseClient.ts, modify components/JejuTravelPlanner.tsx to load from Supabase with fallback and insert new places to Supabase, update README with Supabase section, and add .env.local.example.",
        "task_type": "develop software",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757928726.9517262,
        "end_at": 1757929459.7609775
      },
      "current_task_id": "AWAIT-ANON-ROTATE",
      "2": {
        "task_id": "2",
        "dependent_task_ids": [
          "1"
        ],
        "instruction": "Install dependencies and verify by building and briefly running the dev server. Capture logs and report.",
        "task_type": "develop software",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757929459.7610502,
        "end_at": 1757930023.4934814
      },
      "3": {
        "task_id": "3",
        "dependent_task_ids": [],
        "instruction": "Parse /workspace/uploads/jeju.txt, generate normalized seed JSON and mapping doc, and write schema.sql as provided.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757930023.4934864,
        "end_at": 1757930411.426772
      },
      "4": {
        "task_id": "4",
        "dependent_task_ids": [
          "3"
        ],
        "instruction": "Run ETL: attempt DDL (if possible), upsert categories and insert places into Supabase, then validate counts and samples. Save all logs to /workspace/jeju-travel-planner/logs/etl_validation.log and report results.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757930411.4268484,
        "end_at": 1757931192.8638651
      },
      "5": {
        "task_id": "5",
        "dependent_task_ids": [],
        "instruction": "Run ETL to upload parsed data to Supabase and validate; then list outputs and include the last 50 lines of the validation log in the report.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757931192.8638718,
        "end_at": 1757931705.9692013
      },
      "ETL-1": {
        "task_id": "ETL-1",
        "dependent_task_ids": [],
        "instruction": "Run ETL with provided Supabase env vars: write schema.sql per spec, execute ETL script to parse /workspace/uploads/jeju.txt, attempt DDL (log errors if any), upsert categories/places/schedules/schedule_places, then verify and log counts/samples. Finally, report outputs and include last 50 lines of etl_validation.log.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757931705.9692113,
        "end_at": 1757931876.4958658
      },
      "ETL-2": {
        "task_id": "ETL-2",
        "dependent_task_ids": [],
        "instruction": "Re-run ETL after DDL and anon policies applied: execute scripts/etl_from_jeju_txt.mjs with provided Supabase env vars, then tail the last 50 lines of logs/etl_validation.log for reporting.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757931876.4958713,
        "end_at": 1757933827.2086911
      },
      "PERM-CHECK-1": {
        "task_id": "PERM-CHECK-1",
        "dependent_task_ids": [],
        "instruction": "Implement and run Supabase permission diagnostics with anon key, and rerun ETL. Steps: 1) Write scripts/perm_check.mjs to log select/insert/delete permission results for categories, places, schedules, schedule_places into logs/etl_validation.log. 2) Re-run ETL with provided env vars. 3) Execute perm_check.mjs with same env. 4) Tail last 50 lines of logs/etl_validation.log for reporting.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757933827.2086968,
        "end_at": 1757934137.9120796
      },
      "FRONT-LOG-1": {
        "task_id": "FRONT-LOG-1",
        "dependent_task_ids": [],
        "instruction": "Implement enhanced Supabase error logging and minimal UI banners, add healthcheck on mount, and insert fallback handling in JejuTravelPlanner.tsx; keep/env warnings in supabaseClient.ts. Then verify in dev/build.",
        "task_type": "develop software",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757934137.9120827,
        "end_at": 1757936157.0869257
      },
      "RUN-ETL-PERM-REPORT-1": {
        "task_id": "RUN-ETL-PERM-REPORT-1",
        "dependent_task_ids": [],
        "instruction": "Re-run ETL with provided Supabase env, then run permission diagnostics and tail the validation log for reporting.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757936157.0869312,
        "end_at": 1757936328.5796626
      },
      "FRONT-UX-403": {
        "task_id": "FRONT-UX-403",
        "dependent_task_ids": [],
        "instruction": "Improve frontend UX for 403 Forbidden: strengthen logging in supabaseClient.ts, enhance JejuTravelPlanner.tsx to print error.details/hint, show specific banners for 403/23503/409, and verify build.",
        "task_type": "develop software",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757936328.5796669,
        "end_at": 1757938856.9146466
      },
      "RUN-ETL-PERM-REPORT-2": {
        "task_id": "RUN-ETL-PERM-REPORT-2",
        "dependent_task_ids": [],
        "instruction": "Re-run ETL with provided Supabase env, then run permission diagnostics (anon) and tail the validation log for reporting.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757938856.914654,
        "end_at": 1757939039.8083076
      },
      "BLOCKED-ASK-ANON-KEY-1": {
        "task_id": "BLOCKED-ASK-ANON-KEY-1",
        "dependent_task_ids": [],
        "instruction": "Supabase auth failing with 401 Invalid API key. Request the latest anon public key and confirm URL, then proceed to rerun ETL and PERM_CHECK. Ask which RLS approach to apply after auth is restored.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": false,
        "assignee": "David",
        "start_at": 1757939039.8083167,
        "end_at": 1757941366.744608
      },
      "DIAG-401-1": {
        "task_id": "DIAG-401-1",
        "dependent_task_ids": [],
        "instruction": "Verify the provided Supabase anon key by calling REST endpoints via curl (root and a table query). Capture responses to confirm whether 401 persists before proceeding with policy updates and ETL reruns.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757941366.7446163,
        "end_at": 1757941473.1831934
      },
      "ETL-RETRY-AUTH-FIX-1": {
        "task_id": "ETL-RETRY-AUTH-FIX-1",
        "dependent_task_ids": [],
        "instruction": "After receiving a valid Supabase anon key, update .env.local, rerun ETL (etl_from_jeju_txt.mjs) and PERM_CHECK (perm_check.mjs) with the provided env, then tail etl_validation.log and report results.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": false,
        "assignee": "David",
        "start_at": 1757941473.1831987,
        "end_at": 1757948210.7440107
      },
      "ETL-SVC-ANON-1": {
        "task_id": "ETL-SVC-ANON-1",
        "dependent_task_ids": [],
        "instruction": "Modify ETL to use service_role for upserts and anon for validation; then run ETL with provided env and run PERM_CHECK (anon), finally tail validation log for reporting.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757948210.7440176,
        "end_at": 1757976736.7265935
      },
      "ETL-INSERT-ONLY-RETRY": {
        "task_id": "ETL-INSERT-ONLY-RETRY",
        "dependent_task_ids": [],
        "instruction": "Update env with the provided anon key, switch ETL to insert-only mode, run ETL using service_role, then run PERM_CHECK with anon and tail the validation log for reporting.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757976736.7266006,
        "end_at": 1757977394.7553012
      },
      "REPORT-ETL-RESULT": {
        "task_id": "REPORT-ETL-RESULT",
        "dependent_task_ids": [],
        "instruction": "Report ETL rerun results with service secret, note anon validation failures, and request a valid anon public key or approval to rotate. Propose optional server-side validation addition.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757977394.755307,
        "end_at": 1757977474.5212426
      },
      "RERUN-ETL-PERM-ANON-REPORT": {
        "task_id": "RERUN-ETL-PERM-ANON-REPORT",
        "dependent_task_ids": [],
        "instruction": "Re-run ETL with the new service secret in insert-only mode, then run PERM_CHECK with the provided anon key. Finally, tail the last 50 lines of etl_validation.log and report a summary with masked keys only.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757977474.5212493,
        "end_at": 1757977953.9431942
      },
      "RUN-ETL-PERM-SVCVALID": {
        "task_id": "RUN-ETL-PERM-SVCVALID",
        "dependent_task_ids": [],
        "instruction": "Run ETL with the provided service secret in insert-only mode, append a server-side validation step (service credential) that logs counts and 1-row samples per table into etl_validation.log, then run PERM_CHECK with anon and tail the last 50 lines of the log for reporting.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757977953.943199,
        "end_at": 1757978139.2564378
      },
      "TASK1-ETL-PERM": {
        "task_id": "TASK1-ETL-PERM",
        "dependent_task_ids": [],
        "instruction": "Execute Task 1: Re-run ETL with the provided service secret in insert-only mode, then run PERM_CHECK using the anon key. After execution, tail the last 50 lines of the log and report results with masked keys only.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757978139.2564447,
        "end_at": 1757978290.8299809
      },
      "TASK1-ETL-PERM-EXEC-3": {
        "task_id": "TASK1-ETL-PERM-EXEC-3",
        "dependent_task_ids": [],
        "instruction": "Re-run ETL using the provided service secret in insert-only mode, then run PERM_CHECK using the anon key. Finally, tail the last 50 lines of the validation log and report results with masked keys only.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757978290.8299873,
        "end_at": 1757978956.1215534
      },
      "RERUN-ETL-PERM-FIX-AMP": {
        "task_id": "RERUN-ETL-PERM-FIX-AMP",
        "dependent_task_ids": [],
        "instruction": "Re-run ETL and PERM_CHECK correcting the previous shell operator issue (use && instead of &amp;&amp;), then tail the last 50 lines of the validation log and report results with masked keys only.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": true,
        "assignee": "David",
        "start_at": 1757978956.1215563,
        "end_at": 1757978990.6137145
      },
      "AWAIT-ANON-ROTATE": {
        "task_id": "AWAIT-ANON-ROTATE",
        "dependent_task_ids": [],
        "instruction": "Request the correct Supabase anon public key (not service secret) from Dashboard Settings→API for project gfhtoiqsvrqbwzshjxgs, preferably after rotating. Upon receipt, re-run PERM_CHECK with the anon key and report. Optionally add a JWT role guard in perm_check.mjs to ensure the provided key has role===\"anon\" before running checks.",
        "task_type": "other",
        "code": "",
        "result": "",
        "is_success": false,
        "is_finished": false,
        "assignee": "David",
        "start_at": 1757978990.6137187
      }
    }
  },
  "gallery_last_file": {},
  "timeline_status": {
    "1": 1,
    "2": 1,
    "3": 1,
    "4": 1,
    "5": 1,
    "6": 1,
    "7": 1,
    "8": 1,
    "9": 1,
    "10": 1,
    "11": 1,
    "12": 1,
    "13": 1,
    "14": 1,
    "15": 1,
    "16": 1,
    "17": 1,
    "18": 1,
    "19": 1,
    "20": 1,
    "21": 1,
    "22": 1,
    "23": 1,
    "24": 1,
    "25": 1,
    "26": 1,
    "27": 1,
    "28": 0,
    "29": 1,
    "30": 1,
    "31": 1,
    "32": 1,
    "33": 1,
    "34": 1,
    "35": 1,
    "36": 1,
    "37": 0,
    "38": 1,
    "39": 1,
    "40": 1,
    "41": 1,
    "42": 1,
    "43": 1,
    "44": 1,
    "45": 1,
    "46": 1,
    "47": 1,
    "48": 1,
    "49": 1,
    "50": 1,
    "51": 1,
    "52": 1,
    "53": 1,
    "54": 1,
    "55": 1,
    "56": 1,
    "57": 1,
    "58": 1,
    "59": 1,
    "60": 1,
    "61": 1,
    "62": 1,
    "63": 1,
    "64": 1,
    "65": 1,
    "66": 1,
    "67": 1,
    "68": 1,
    "69": 1,
    "70": 1,
    "71": 1,
    "72": 1,
    "73": 1,
    "74": 1,
    "75": 1,
    "76": 1,
    "77": 1,
    "78": 1,
    "79": 1,
    "80": 1,
    "81": 1,
    "82": 1,
    "83": 1,
    "84": 1,
    "85": 1,
    "86": 1,
    "87": 1,
    "88": 1,
    "89": 1,
    "90": 1,
    "91": 1,
    "92": 1,
    "93": 1,
    "94": 1,
    "95": 1,
    "96": 1,
    "97": 1,
    "98": 0,
    "99": 1,
    "100": 1,
    "101": 1,
    "102": 1,
    "103": 1,
    "104": 1,
    "105": 1,
    "106": 1,
    "107": 1,
    "108": 1,
    "109": 1,
    "110": 1,
    "111": 1,
    "112": 1,
    "113": 1,
    "114": 1,
    "115": 0,
    "116": 1,
    "117": 1,
    "118": 1,
    "119": 1,
    "120": 1,
    "121": 1,
    "122": 1,
    "123": 1,
    "124": 1,
    "125": 1,
    "126": 1,
    "127": 1,
    "128": 1,
    "129": 1,
    "130": 0,
    "131": 1,
    "132": 1,
    "133": 1,
    "134": 1,
    "135": 1,
    "136": 1,
    "137": 1,
    "138": 1,
    "139": 1,
    "140": 1,
    "141": 1,
    "142": 1,
    "143": 1,
    "144": 1,
    "145": 1,
    "146": 1,
    "147": 0,
    "148": 1,
    "149": 1,
    "150": 1,
    "151": 1,
    "152": 1,
    "153": 1,
    "154": 1,
    "155": 1,
    "156": 1,
    "157": 1,
    "158": 1,
    "159": 1,
    "160": 1,
    "161": 1,
    "162": 1,
    "163": 1,
    "164": 1,
    "165": 1,
    "166": 1,
    "167": 1,
    "168": 1,
    "169": 1,
    "170": 1,
    "171": 1,
    "172": 1,
    "173": 1,
    "174": 1,
    "175": 1,
    "176": 1,
    "177": 1,
    "178": 1,
    "179": 1,
    "180": 1,
    "182": 1,
    "181": 1,
    "183": 1,
    "184": 1,
    "185": 1,
    "186": 1,
    "187": 1,
    "188": 1,
    "189": 1,
    "190": 1,
    "191": 1,
    "192": 1,
    "193": 1,
    "194": 1,
    "195": 1,
    "196": 1,
    "197": 1,
    "198": 1,
    "199": 1,
    "200": 1,
    "201": 1,
    "202": 1,
    "203": 1,
    "204": 1
  },
  "preview_servers": {},
  "preview_server": {
    "project_dir": "/workspace/jeju-travel-planner",
    "status": "initializing",
    "config_path": ".mgx/config.yaml",
    "timeline_index": 29
  },
  "last_build_failed": false
}